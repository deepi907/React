{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\Projects\\\\react challenges\\\\Day2\\\\day2\\\\progress-bar-app\\\\src\\\\ProgressBar.js\";\n// ProgressBar.js\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  percent\n}) => {\n  // Calculate width for the progress bar\n  const progressBarStyle = {\n    width: `${percent}%`,\n    height: '20px',\n    backgroundColor: 'green',\n    borderRadius: '5px'\n  };\n  const containerStyle = {\n    width: '100%',\n    height: '20px',\n    backgroundColor: 'lightgrey',\n    borderRadius: '5px',\n    overflow: 'hidden' // Ensure the progress bar stays within the container\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: progressBarStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n// Define prop types for the ProgressBar component\n_c = ProgressBar;\nProgressBar.propTypes = {\n  percent: PropTypes.number.isRequired\n};\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","ProgressBar","percent","progressBarStyle","width","height","backgroundColor","borderRadius","containerStyle","overflow","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","number","isRequired","$RefreshReg$"],"sources":["C:/Users/KIIT/Desktop/Projects/react challenges/Day2/day2/progress-bar-app/src/ProgressBar.js"],"sourcesContent":["// ProgressBar.js\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProgressBar = ({ percent }) => {\r\n  // Calculate width for the progress bar\r\n  const progressBarStyle = {\r\n    width: `${percent}%`,\r\n    height: '20px',\r\n    backgroundColor: 'green',\r\n    borderRadius: '5px',\r\n  };\r\n\r\n  const containerStyle = {\r\n    width: '100%',\r\n    height: '20px',\r\n    backgroundColor: 'lightgrey',\r\n    borderRadius: '5px',\r\n    overflow: 'hidden', // Ensure the progress bar stays within the container\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <div style={progressBarStyle}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Define prop types for the ProgressBar component\r\nProgressBar.propTypes = {\r\n  percent: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ProgressBar;\r\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACnC;EACA,MAAMC,gBAAgB,GAAG;IACvBC,KAAK,EAAE,GAAGF,OAAO,GAAG;IACpBG,MAAM,EAAE,MAAM;IACdC,eAAe,EAAE,OAAO;IACxBC,YAAY,EAAE;EAChB,CAAC;EAED,MAAMC,cAAc,GAAG;IACrBJ,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,eAAe,EAAE,WAAW;IAC5BC,YAAY,EAAE,KAAK;IACnBE,QAAQ,EAAE,QAAQ,CAAE;EACtB,CAAC;EAED,oBACET,OAAA;IAAKU,KAAK,EAAEF,cAAe;IAAAG,QAAA,eACzBX,OAAA;MAAKU,KAAK,EAAEP;IAAiB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;;AAED;AAAAC,EAAA,GAxBMf,WAAW;AAyBjBA,WAAW,CAACgB,SAAS,GAAG;EACtBf,OAAO,EAAEJ,SAAS,CAACoB,MAAM,CAACC;AAC5B,CAAC;AAED,eAAelB,WAAW;AAAC,IAAAe,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}